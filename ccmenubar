#!/bin/bash

# CCMenuBar wrapper script
# Usage: ccmenubar "text to display"
#        ccmenubar --start    (launch the app)
#        ccmenubar --quit     (quit the app)
#        ccmenubar --help     (show help)

APP_NAME="CCMenuBar"

# Function to check if app is running
is_running() {
    osascript -e "tell application \"System Events\" to (name of processes) contains \"$APP_NAME\"" 2>/dev/null
}

# Function to set status text
set_status() {
    local text="$1"
    # Escape any quotes in the input text
    text="${text//\"/\\\"}"
    
    # Try to set status
    osascript -e "tell application \"$APP_NAME\" to set_status(\"$text\")" 2>/dev/null
    
    if [ $? -ne 0 ]; then
        echo "Error: Failed to set status. Make sure $APP_NAME is running." >&2
        echo "Start it with: $0 --start" >&2
        return 1
    fi
}

# Function to start the app
start_app() {
    if is_running | grep -q "true"; then
        echo "$APP_NAME is already running."
    else
        echo "Starting $APP_NAME..."
        osascript -e "tell application \"$APP_NAME\" to activate" 2>/dev/null
        sleep 1  # Give it a moment to start
        
        if is_running | grep -q "true"; then
            echo "$APP_NAME started successfully."
        else
            echo "Failed to start $APP_NAME." >&2
            return 1
        fi
    fi
}

# Function to quit the app
quit_app() {
    if is_running | grep -q "false"; then
        echo "$APP_NAME is not running."
    else
        echo "Quitting $APP_NAME..."
        osascript -e "tell application \"$APP_NAME\" to quit" 2>/dev/null
        echo "$APP_NAME quit successfully."
    fi
}

# Function to show help
show_help() {
    cat << EOF
CCMenuBar Command Line Interface

Usage:
    ccmenubar "text"      Set the status bar text
    ccmenubar --start     Launch CCMenuBar app
    ccmenubar --quit      Quit CCMenuBar app  
    ccmenubar --status    Check if app is running
    ccmenubar --help      Show this help message

Examples:
    ccmenubar "Hello World"
    ccmenubar "CPU: 45%"
    ccmenubar "$(date '+%H:%M')"
    echo "Status text" | ccmenubar -

Options:
    -           Read text from stdin
    --start     Launch the app if not running
    --quit      Quit the app
    --status    Check if app is running
    --help      Show help

Note: The app must be running to set status text.
      Use 'ccmenubar --start' to launch it first.
EOF
}

# Main logic
case "$1" in
    --help|-h)
        show_help
        ;;
    --start)
        start_app
        ;;
    --quit)
        quit_app
        ;;
    --status)
        if is_running | grep -q "true"; then
            echo "$APP_NAME is running"
            exit 0
        else
            echo "$APP_NAME is not running"
            exit 1
        fi
        ;;
    -)
        # Read from stdin
        if is_running | grep -q "false"; then
            echo "Warning: $APP_NAME is not running. Starting it..." >&2
            start_app
        fi
        while IFS= read -r line; do
            set_status "$line"
        done
        ;;
    "")
        echo "Error: No text provided" >&2
        echo "Usage: ccmenubar \"text to display\"" >&2
        echo "Run 'ccmenubar --help' for more options" >&2
        exit 1
        ;;
    *)
        # Set status with provided text
        if is_running | grep -q "false"; then
            echo "Warning: $APP_NAME is not running. Starting it..." >&2
            start_app
        fi
        set_status "$1"
        ;;
esac
